/*
 *  Copyright (C) 2017. Timo Homburg
 *  This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 3 of the License, or
 *   (at your option) any later version.
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *   You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software Foundation,
 *  Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
 *
 */

package com.github.situx.postagger.main.gui.ime.jquery;

/**
 * Created by timo on 10/31/14.
 */
public class AkkSyllable implements Comparable<AkkSyllable> {
    @Override
    public int compareTo(final AkkSyllable akkSyllable) {
        return this.pinyin.compareTo(akkSyllable.pinyin);
    }

    enum test {
           A,
           AI,
           AN,
           ANG,
           AO,
           BA,
           BAI,
           BAN,
           BANG,
           BAO,
           BEI,
           BEN,
           BENG,
           BI,
           BIAN,
           BIAO,
           BIE,
           BIN,
           BING,
           BO,
           BU,
           CA,
           CAI,
           CAN,
           CANG,
           CAO,
           CE,
           CEN,
           CENG,
           CHA,
           CHAI,
           CHAN,
           CHANG,
           CHAO,
           CHE,
           CHEN,
           CHENG,
           CHI,
           CHONG,
           CHOU,
           CHU,
           CHUAI,
           CHUAN,
           CHUANG,
           CHUI,
           CHUN,
           CHUO,
           CI,
           CONG,
           COU,
           CU,
           CUAN,
           CUI,
           CUN,
           CUO,
           DA,
           DAI,
           DAN,
           DANG,
           DAO,
           DE,
           DEI,
           DENG,
           DI,
           DIAN,
           DIAO,
           DIE,
           DING,
           DIU,
           DONG,
           DOU,
           DU,
           DUAN,
           DUI,
           DUN,
           DUO,
           E,
           EN,
           ER,
           FA,
           FAN,
           FANG,
           FEI,
           FEN,
           FENG,
           FO,
           FOU,
           FU,
           GA,
           GAI,
           GAN,
           GANG,
           GAO,
           GE,
           GEI,
           GEN,
           GENG,
           GONG,
           GOU,
           GU,
           GUA,
           GUAI,
           GUAN,
           GUANG,
           GUI,
           GUN,
           GUO,
           HA,
           HAI,
           HAN,
           HANG,
           HAO,
           HE,
           HEI,
           HEN,
           HENG,
           HONG,
           HOU,
           HU,
           HUA,
           HUAI,
           HUAN,
           HUANG,
           HUI,
           HUN,
           HUO,
           JI,
           JIA,
           JIAN,
           JIANG,
           JIAO,
           JIE,
           JIN,
           JING,
           JIONG,
           JIU,
           JU,
           JUAN,
           JUE,
           JUN,
           KA,
           KAI,
           KAN,
           KANG,
           KAO,
           KE,
           KEN,
           KENG,
           KONG,
           KOU,
           KU,
           KUA,
           KUAI,
           KUAN,
           KUANG,
           KUI,
           KUN,
           KUO,
           LA,
           LAI,
           LAN,
           LANG,
           LAO,
           LE,
           LEI,
           LENG,
           LI,
           LIA,
           LIAN,
           LIANG,
           LIAO,
           LIE,
           LIN,
           LING,
           LIU,
           LONG,
           LOU,
           LU,
           LUAN,
           LUN,
           LUO,
           LÜ,
           LÜE,
           MA,
           MAI,
           MAN,
           MANG,
           MAO,
           ME,
           MEI,
           MEN,
           MENG,
           MI,
           MIAN,
           MIAO,
           MIE,
           MIN,
           MING,
           MIU,
           MO,
           MOU,
           MU,
           NA,
           NAI,
           NAN,
           NANG,
           NAO,
           NE,
           NEI,
           NEN,
           NENG,
           NG,
           NI,
           NIAN,
           NIANG,
           NIAO,
           NIE,
           NIN,
           NING,
           NIU,
           NONG,
           NOU,
           NU,
           NUAN,
           NUO,
           NÜ,
           NÜE,
           O,
           OU,
           PA,
           PAI,
           PAN,
           PANG,
           PAO,
           PEI,
           PEN,
           PENG,
           PI,
           PIAN,
           PIAO,
           PIE,
           PIN,
           PING,
           PO,
           POU,
           PU,
           QI,
           QIA,
           QIAN,
           QIANG,
           QIAO,
           QIE,
           QIN,
           QING,
           QIONG,
           QIU,
           QU,
           QUAN,
           QUE,
           QUN,
           R,
           RAN,
           RANG,
           RAO,
           RE,
           REN,
           RENG,
           RI,
           RONG,
           ROU,
           RU,
           RUAN,
           RUI,
           RUN,
           RUO,
           SA,
           SAI,
           SAN,
           SANG,
           SAO,
           SE,
           SEN,
           SENG,
           SHA,
           SHAI,
           SHAN,
           SHANG,
           SHAO,
           SHE,
           SHEI,
           SHEN,
           SHENG,
           SHI,
           SHOU,
           SHU,
           SHUA,
           SHUAI,
           SHUAN,
           SHUANG,
           SHUI,
           SHUN,
           SHUO,
           SI,
           SONG,
           SOU,
           SU,
           SUAN,
           SUI,
           SUN,
           SUO,
           TA,
           TAI,
           TAN,
           TANG,
           TAO,
           TE,
           TENG,
           TI,
           TIAN,
           TIAO,
           TIE,
           TING,
           TONG,
           TOU,
           TU,
           TUAN,
           TUI,
           TUN,
           TUO,
           WA,
           WAI,
           WAN,
           WANG,
           WEI,
           WEN,
           WENG,
           WO,
           WU,
           XI,
           XIA,
           XIAN,
           XIANG,
           XIAO,
           XIE,
           XIN,
           XING,
           XIONG,
           XIU,
           XU,
           XUAN,
           XUE,
           XUN,
           YA,
           YAI,
           YAN,
           YANG,
           YAO,
           YE,
           YI,
           YIN,
           YING,
           YO,
           YONG,
           YOU,
           YU,
           YUAN,
           YUE,
           YUN,
           ZA,
           ZAI,
           ZAN,
           ZANG,
           ZAO,
           ZE,
           ZEI,
           ZEN,
           ZENG,
           ZHA,
           ZHAI,
           ZHAN,
           ZHANG,
           ZHAO,
           ZHE,
           ZHEN,
           ZHENG,
           ZHI,
           ZHONG,
           ZHOU,
           ZHU,
           ZHUA,
           ZHUAI,
           ZHUAN,
           ZHUANG,
           ZHUI,
           ZHUN,
           ZHUO,
           ZI,
           ZONG,
           ZOU,
           ZU,
           ZUAN,
           ZUI,
           ZUN,
           ZUO;
       }

    public AkkSyllable(String pinyin){
        this.pinyin=pinyin;
    }

        /**
         * Permissive alternative to valueOf.
         * Accepts lower case input and "v" instead
         * of u:.
         *
         * @param pinyin
         * @return enum instance
         */
        static public AkkSyllable parseValue(String pinyin) {
            pinyin = pinyin.toUpperCase();

            // accept both "v" and "u:" for ü
            pinyin = pinyin.replace("V", "Ü");
            pinyin = pinyin.replace("U:", "Ü");

            return new AkkSyllable(pinyin);
        }

    String pinyin;

    @Override
    public String toString() {
        return pinyin;
    }
}
